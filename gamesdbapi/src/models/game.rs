/*
 * TheGamesDB API
 *
 * API Documentation
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Game {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "game_title", skip_serializing_if = "Option::is_none")]
    pub game_title: Option<String>,
    #[serde(rename = "release_date", skip_serializing_if = "Option::is_none")]
    pub release_date: Option<String>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<i32>,
    #[serde(rename = "players", skip_serializing_if = "Option::is_none")]
    pub players: Option<i32>,
    #[serde(rename = "overview", skip_serializing_if = "Option::is_none")]
    pub overview: Option<String>,
    #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<String>,
    #[serde(rename = "coop", skip_serializing_if = "Option::is_none")]
    pub coop: Option<String>,
    #[serde(rename = "youtube", skip_serializing_if = "Option::is_none")]
    pub youtube: Option<String>,
    #[serde(rename = "os", skip_serializing_if = "Option::is_none")]
    pub os: Option<String>,
    #[serde(rename = "processor", skip_serializing_if = "Option::is_none")]
    pub processor: Option<String>,
    #[serde(rename = "ram", skip_serializing_if = "Option::is_none")]
    pub ram: Option<String>,
    #[serde(rename = "hdd", skip_serializing_if = "Option::is_none")]
    pub hdd: Option<String>,
    #[serde(rename = "video", skip_serializing_if = "Option::is_none")]
    pub video: Option<String>,
    #[serde(rename = "sound", skip_serializing_if = "Option::is_none")]
    pub sound: Option<String>,
    #[serde(rename = "developers", skip_serializing_if = "Option::is_none")]
    pub developers: Option<Vec<i32>>,
    #[serde(rename = "genres", skip_serializing_if = "Option::is_none")]
    pub genres: Option<Vec<i32>>,
    #[serde(rename = "publishers", skip_serializing_if = "Option::is_none")]
    pub publishers: Option<Vec<i32>>,
    #[serde(rename = "alternates", skip_serializing_if = "Option::is_none")]
    pub alternates: Option<Vec<String>>,
}

impl Game {
    pub fn new() -> Game {
        Game {
            id: None,
            game_title: None,
            release_date: None,
            platform: None,
            players: None,
            overview: None,
            last_updated: None,
            rating: None,
            coop: None,
            youtube: None,
            os: None,
            processor: None,
            ram: None,
            hdd: None,
            video: None,
            sound: None,
            developers: None,
            genres: None,
            publishers: None,
            alternates: None,
        }
    }
}


